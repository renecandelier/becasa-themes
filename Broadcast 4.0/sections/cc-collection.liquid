<!-- /sections/collections.liquid -->

{%- liquid
  assign enable_sort = section.settings.enable_sort
  assign enable_filters = section.settings.enable_filters
  assign filter_layout = section.settings.filter_layout
  assign border_color = section.settings.border_color

  if filter_layout == 'inline-open'
    assign filters_expanded = true
  endif
  comment
    The product limit decrement will be removed once we add more block types
  endcomment

  assign product_limit = section.settings.product_limit
  assign blocks_featured_image = section.blocks | where: "type", "featured_image"
  if blocks_featured_image.size > 0
    assign product_limit = product_limit | minus: 1
  endif

  assign columns_desktop = section.settings.grid | plus: 0
  assign columns_medium = 3
  assign columns_small = 2
  assign columns_mobile = section.settings.grid_mobile | plus: 0

  if columns_desktop == 2 or columns_desktop == 4
    assign columns_medium = 2
  endif

  assign animation_anchor = '.collection-' | append: collection.handle
  assign animation_duration = 800
-%}

{%- capture image_sizes -%}
  {%- if settings.grid_style == 'compact' -%}
    (min-width: 1400px) calc((100vw - 288px) / {{ columns_desktop }}), (min-width: 750px) calc((100vw - 258px) / {{ columns_medium }}), (min-width: 480px) calc(100vw / {{ columns_small }}), calc(100vw / {{ columns_mobile }})
  {%- else -%}
    (min-width: 1400px) calc((100vw - 288px - 100px) / {{ columns_desktop }} - 32px), (min-width: 750px) calc((100vw - 258px - 64px) / {{ columns_medium }} - 32px), (min-width: 480px) calc((100vw - 32px) / {{ columns_small }}), calc((100vw - 32px) / {{ columns_mobile }})
  {%- endif -%}
{%- endcapture -%}

{%- style -%}
  #Collection--{{ section.id }} {
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;

    --COLUMNS: {{ columns_desktop }};
    --COLUMNS-MEDIUM: {{ columns_medium }};
    --COLUMNS-SMALL: {{ columns_small }};
    --COLUMNS-MOBILE: {{ columns_mobile }};

    {% unless border_color == 'rgba(0,0,0,0)' or border_color == blank %}
      --hairline: {{ border_color }};
    {% endunless %}
  }

  #shopify-section-{{ section.id }} .section-padding{
    --PT-MOBILE: 0;
  }

#shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-top,
#shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-inside.showonmobile{
    justify-content: center;
}

#shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-top:not(.coldescempty){
  text-align: center;
}

#shopify-section-{{ section.id }} .hero__title{
  text-transform: Capitalize;
}

#shopify-section-{{ section.id }} .coldescempty .hero__title{
    margin: 0;
}

#shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-inside .hero__content{
  background: transparent;
}

#shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-inside .hero__description {
    margin: 0;
}

#shopify-section-{{ section.id }} .hero__description  p:first-child{
    margin-top: 0;
}

#shopify-section-{{ section.id }} .showonmobile{
    display: none;
}

#shopify-section-{{ section.id }} .filter-group details[open="true"] {
    padding-bottom: 16px;
}

#shopify-section-{{ section.id }} .filter__price__fields{
  margin: 0;
}

#shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-inside .hero__content{
  text-align: center;
}

#shopify-section-{{ section.id }} .collection__nav,
#shopify-section-{{ section.id }} .collection__sidebar__slider{
    {% if border_color == 'rgba(0,0,0,0)' or border_color == blank %}
    --hairline: transparent;
    {% endif %}
}

#shopify-section-{{ section.id }} .hero__content__wrapper {
    padding-top: 25px;
    padding-bottom: 25px;
}

#shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-top .hero__title {
  color: {{ section.settings.hcolor }};
}

#shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-top .hero__description{
  color: {{ section.settings.tcolor }};
  
}

#shopify-section-{{ section.id }} .hero__content{
  padding: 0;
  background-color: transparent;
}

#shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-top .hero__content{
  max-width: 586px;
  margin-left: auto;
  margin-right: auto;
}

{% if collection.template_suffix contains "look" %}
#shopify-section-{{ section.id }} .quick-add__holder{
  opacity: 1 !important;
}

#shopify-section-{{ section.id }} .quick-add__button{
  visibility: visible !important;
}
{% endif %}

@media only screen and (min-width: 750px){

    #shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-inside{
        align-items: center;
        padding: 0 30px;
    }

    #shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-inside .hero__content{
        flex-direction: row;
        gap: 20px;
        text-align:left;
        padding: 14px 0;
    }

    #shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-inside .hero__content h1,
    #shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-inside .hero__content p:only-child,
    #shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-inside .hero__content p:last-child{
      margin: 0;
    }

    #shopify-section-{{ section.id }} .hero__title {
        flex-shrink: 0;
    }

   #shopify-section-{{ section.id }} .collection__products .grid-outer {
      padding-top: 16px;
    }

    #shopify-section-{{ section.id }} .hero__description{
      max-height: 100px;
      overflow-y: auto;
    }


}

@media only screen and (max-width: 749px){
    #shopify-section-{{ section.id }} .showondesktop{
        display: none;
    }

    #shopify-section-{{ section.id }} .showonmobile{
        display: flex;
    }

    #shopify-section-{{ section.id }} .hero__content__wrapper.coltitledesc-inside .hero__content{
        padding: 0px;
    }
}
{%- endstyle -%}

{%- capture collection_sidebar_class -%}
  {%- if filter_layout == 'slide-out' -%}
    collection__sidebar__slide-out
    {%- else -%}
    collection__sidebar__slider{% if filters_expanded %} expanded drawer--animated no-mobile-animation{% endif %}
  {%- endif -%}
{%- endcapture -%}

{% liquid
    assign title = collection.title
    assign description = collection.description
%}

{% if section.settings.show_coltitle_desc and section.settings.coltitle_desc_pos == 'coltitledesc-top'%}
<div class="hero__content__wrapper coltitledesc-top{% if description == blank %} coldescempty{%endif%}">
    <div class="hero__content">
    {%- if title != blank -%}
        <h1 class="hero__title h5">{{ title }}</h1>
    {%- endif -%}

    {%- if description != blank -%}
        <div class="hero__description rte">{{ description }}</div>
    {%- endif -%}
    </div>
</div>
{% endif %}

{% if section.settings.show_coltitle_desc and section.settings.coltitle_desc_pos == 'coltitledesc-inside'%}
<div class="hero__content__wrapper coltitledesc-inside showonmobile{% if description == blank %} coldescempty{%endif%}">
    <div class="hero__content">
    {%- if title != blank -%}
        <h1 class="hero__title h5">{{ title }}</h1>
    {%- endif -%}

    {%- if description != blank -%}
        <div class="hero__description rte">{{ description }}</div>
    {%- endif -%}
    </div>
</div>
{% endif %}


{%- paginate collection.products by product_limit -%}
  <section class="collection collection-products collection-{{ collection.handle }} section-padding"
    id="Collection--{{ section.id }}"
    data-section-id="{{ section.id }}"
    data-section-type="collection"
    data-sort="{{ enable_sort }}"
    data-collection="{{ collection.url | default: '/collections/all' }}">

    {%- assign align_classes = '' -%}
    {%- if enable_sort -%}
      {%- assign align_classes = align_classes | append: ' collection__nav--sort ' -%}
    {%- endif -%}

    {%- if enable_filters -%}
      {% assign align_classes = align_classes | append: ' collection__nav--filter ' %}
    {%- endif -%}



    {%- if enable_sort or enable_filters -%}
      <nav class="collection__nav {{ align_classes }}" data-collection-nav>
        {%- if enable_filters -%}
          {%- liquid
            assign filter_active_count = 0

            if enable_filters
              for filter in collection.filters
                assign filter_active_count = filter_active_count | plus: filter.active_values.size
              endfor
            endif
          -%}
          <div class="popout--group">
            <button
              type="button"
              class="popout__toggle{% unless filter_layout == 'slide-out' %} popout__toggle--filters{% endunless %}"
              aria-expanded="{% if filters_expanded %}true{% else %}false{% endif %}"
              aria-controls="filter-groups"
              data-aria-toggle>
              {%- render 'icon-filter' -%}

              {%- if filter_layout == 'slide-out' -%}
                {{ 'collections.general.filters' | t }}
              {%- else -%}
                <span class="popout__toggleable-text">
                  <span class="popout__expanded-show">
                    {{- 'collections.general.show_filters' | t -}}
                    <span class="filter-count{% if filter_active_count < 1 %} hidden{% endif %}" data-active-filters>
                      {{- filter_active_count -}}
                    </span>
                  </span>

                  <span class="popout__expanded-hide">
                    {{- 'collections.general.hide_filters' | t -}}
                    <span class="filter-count{% if filter_active_count < 1 %} hidden{% endif %}" data-active-filters>
                      {{- filter_active_count -}}
                    </span>
                  </span>
                </span>
              {%- endif -%}

              {%- unless filter_layout == 'slide-out' -%}
                {%- render 'icon-nav-arrow-down' -%}
              {%- endunless -%}
            </button>
          </div>
        {%- endif -%}

            {% if section.settings.show_coltitle_desc and section.settings.coltitle_desc_pos == 'coltitledesc-inside'%}
            <div class="hero__content__wrapper coltitledesc-inside showondesktop{% if description == blank %} coldescempty{%endif%}">
                <div class="hero__content">
                {%- if title != blank -%}
                    <h1 class="hero__title h5">{{ title }}</h1>
                {%- endif -%}

                {%- if description != blank -%}
                    <div class="hero__description rte">{{ description }}</div>
                {%- endif -%}
                </div>
            </div>
            {% endif %}

        {%- if enable_sort -%}
          {% render 'collection-sorting' %}
        {%- endif -%}
      </nav>
    {%- endif -%}

    <div class="collection__products">
      {%- if enable_filters -%}
        <div class="{{ collection_sidebar_class }}" id="filter-groups" data-collection-sidebar>
          <div class="collection__sidebar__head{% unless filter_layout == 'slide-out' %} mobile{% endunless %}">
            <h3>
              {{- 'collections.general.filters' | t -}}

              <span
                class="filter-count{% if filter_active_count < 1 %} hidden{% endif %}"
                data-active-filters>
                {{- filter_active_count -}}
              </span>
            </h3>

            <a href="#filters-group" class="collection__sidebar__close" data-collection-sidebar-close aria-label="{{ 'collections.general.hide_filters' | t }}">
              {%- render 'icon-cancel' -%}
            </a>
          </div>

          {%- render 'cc-collection-filters-sidebar', section: section -%}
        </div>

        <div class="underlay{% unless filter_layout == 'slide-out' %} mobile{% endunless %}" data-collection-sidebar-close></div>
      {%- elsif enable_sort -%}
        <collection-filters-form>
          <form data-collection-filters-form class="collection__filters hidden" id="{{ section.id }}-form-filter"></form>
        </collection-filters-form>
      {%- endif -%}

      <div class="grid-outer" data-products-grid>
        <div class="grid" id="CollectionLoop">
          {%- if paginate.current_page == 1 and collection.products_count > 0 -%}
            {%- for block in section.blocks -%}
              {%- liquid
                assign featured_image = block.settings.featured_image | default: collection.featured_image 
                assign featured_header = block.settings.featured_heading
                assign featured_text = block.settings.featured_text
                assign featured_button_text = block.settings.featured_button_text
                assign featured_button_link = block.settings.featured_button_link
                assign featured_color_text = block.settings.featured_color_text
                assign featured_color_overlay = block.settings.featured_color_overlay
                assign featured_overlay_opacity = block.settings.featured_overlay_opacity | times: 0.01

                assign button_style = block.settings.button_style
                if button_style == 'btn--text' and block.settings.show_arrow
                  assign button_style = button_style | append: ' btn--text-no-underline'
                endif
              -%}

              {%- capture style -%}
                {%- unless featured_color_text == 'rgba(0,0,0,0)' or featured_color_text == blank -%}
                  --text: {{ featured_color_text }};
                {%- endunless -%}
                --overlay-opacity: {{ featured_overlay_opacity }};
                --overlay-bg: {{ featured_color_overlay }};
              {%- endcapture -%}

              <div class="grid-item product-item product-item--featured-image"
                id="Product-item--{{ block.id }}"
                style="{{ style }}"
                {{ block.shopify_attributes }}>
                {%- capture featured_image_content -%}
                  <div class="product-item__image-overlay">
                    <div class="product-item__image-content">
                      {%- if featured_header != blank -%}
                        <h3 class="heading-size-{{ block.settings.heading_size }}">{{ featured_header }}</h3>
                      {%- endif -%}

                      {%- if featured_text != blank -%}
                        {{ featured_text }}
                      {%- endif -%}

                      {%- if featured_button_text != blank -%}
                        <a href="{{ featured_button_link }}" class="btn {{ button_style }} {{ block.settings.button_type }} {{ block.settings.button_size }}" data-aos="fade-up" data-aos-anchor="{{ animation_anchor }}" data-aos-duration="{{ animation_duration }}" data-aos-delay="200">
                          <span>{{ featured_button_text }}</span>

                          {%- if block.settings.show_arrow -%}
                            {%- render 'icon-arrow-right' -%}
                          {%- endif -%}
                        </a>
                      {%- endif -%}
                    </div>

                    {%- if featured_button_text == blank and featured_button_link != blank -%}
                      <a href="{{ featured_button_link }}" class="product-item__image-link" aria-label="{{ featured_image.alt | default: featured_header | default: featured_text | strip_html | escape }}"></a>
                    {%- endif -%}
                  </div>
                {%- endcapture -%}

                {%- unless featured_image == blank -%}
                  <div class="product-item__image">
                    <div class="product-item__bg"
                      data-aos="img-in"
                      data-aos-anchor="{{ animation_anchor }}"
                      data-aos-delay="{{ animation_delay | times: 150 }}"
                      data-aos-duration="{{ animation_duration }}"
                      data-aos-easing="ease-out-quart">
                      {%- render 'image' image: featured_image, sizes: image_sizes, loading: 'eager', preload: 'true', fetchpriority: 'high', cover: true -%}
                      </div>

                    {{ featured_image_content }}
                  </div>
                {%- else -%}
                  <div class="product-item__image">
                    <div class="svg-placeholder">
                      {{ 'collection-1' | placeholder_svg_tag }}
                    </div>

                    {{ featured_image_content }}
                  </div>
                {%- endunless -%}
              </div>
            {%- endfor -%}
          {%- endif -%}

          {%- if collection.products_count > 0 -%}
            {%- for product in collection.products -%}
              {%- assign grid_int = section.settings.grid | times: 1 -%}
              {%- assign animation_delay = forloop.index0 | modulo: grid_int | times: 1 -%}
              {%- render 'cc-product-grid-item', product: product, animation_delay: animation_delay, index: forloop.index, sizes: image_sizes -%}
            {%- endfor -%}
          {%- else -%}
            <div class="no-results">
              <p><strong>{{ 'collections.general.no_matches' | t }}</strong></p>
              {%- assign sort_by_string = '' -%}
              {%- if collection.sort_by != blank -%}
                {%- assign sort_by_string = '?sort_by=' | append: collection.sort_by -%}
              {%- endif -%}
              <a class="btn caps btn--primary btn--solid" href="{{ collection.url | append: sort_by_string }}" data-filter-update-url><span>{{ 'collections.general.reset' | t }}</span></a>
            </div>
          {%- endif -%}
        </div>

        {%- render 'cc-pagination', paginate: paginate -%}

        <div class="grid__loader">
          <div class="loader grid__loader-line"><div class="loader-indeterminate"></div></div>
        </div>
      </div>
    </div>
  </section>
{%- endpaginate -%}

{% schema %}
  {
    "name": "Collection products",
    "settings": [
      {
        "type": "checkbox",
        "id": "show_coltitle_desc",
        "label": "Show collection title and description",
        "default": true
      },
      {
        "type": "select",
        "id": "coltitle_desc_pos",
        "label": "Collection title and description position",
        "default": "coltitledesc-top",
        "options": [
            {
                "value": "coltitledesc-inside",
                "label": "Inside"
            },
            {
                "value": "coltitledesc-top",
                "label": "Top"
            }
        ]
      },
      {
        "type": "color",
        "id": "hcolor",
        "label": "Heading color",
        "default": "#000",
        "info": "This will work if collection title and description position are on top"
      },
      {
        "type": "color",
        "id": "tcolor",
        "label": "Text color",
        "default": "#000",
        "info": "This will work if collection title and description position are on top"
      },
      {
        "type": "color",
        "id": "bgcolor",
        "label": "Background color",
        "default": "transparent",
        "info": "This will work if collection title and description position are on top"
      },
      {
        "type": "checkbox",
        "id": "enable_sort",
        "label": "Show sorting",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "enable_filters",
        "label": "Enable filters",
        "default": true
      },
      {
        "type": "select",
        "id": "filter_layout",
        "label": "Filter layout",
        "default": "inline-open",
        "options": [
          { "label": "Slide out", "value": "slide-out" },
          { "label": "Inline (closed)", "value": "inline-closed" },
          { "label": "Inline (open)", "value": "inline-open" }
        ]
      },
      {
        "type": "link_list",
        "id": "collection_linklist",
        "label": "Sidebar navigation",
        "info": "This menu won't show dropdown items."
      },
      {
        "type": "header",
        "content": "Product grid"
      },
      {
        "type":    "range",
        "id":      "grid",
        "label":   "Products per row on desktop",
        "min":     2,
        "max":     6,
        "step":    1,
        "default": 3
      },
      {
        "type": "radio",
        "id": "grid_mobile",
        "label": "Products per row on mobile",
        "options": [
          {
            "value": "1",
            "label": "One"
          },
          {
            "value": "2",
            "label": "Two"
          }
        ],
        "default": "2"
      },
      {
        "type":    "range",
        "id":      "product_limit",
        "min":     1,
        "max":     50,
        "step":    1,
        "label":   "Products per page",
        "default": 36
      },
      {
        "type": "header",
        "content": "Colors"
      },
      {
        "type": "color",
        "id": "border_color",
        "label": "Border color",
        "default": "transparent"
      },
      {
        "type": "header",
        "content": "Section padding"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "px",
        "label": "Padding top",
        "default": 0
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "px",
        "label": "Padding bottom",
        "default": 0
      }
    ],
    "blocks": [
      {
        "type": "featured_image",
        "limit": 1,
        "name": "Featured image",
        "settings": [
          {
            "type": "image_picker",
            "id": "featured_image",
            "label": "Image"
          },
          {
            "type": "text",
            "id": "featured_heading",
            "label": "Heading",
            "default": "Featured link"
          },
          {
            "type": "range",
            "id": "heading_size",
            "label": "Heading size",
            "min": 1,
            "max": 15,
            "step": 1,
            "default": 7
          },
          {
            "type": "richtext",
            "id": "featured_text",
            "label": "Text",
            "default":"<p>Promote products or collections</p>"
          },
          {
            "type": "text",
            "id": "featured_button_text",
            "label": "Button label",
            "default":"Learn more"
          },
          {
            "type": "url",
            "id": "featured_button_link",
            "label": "Button link"
          },
          {
            "type": "select",
            "id": "button_type",
            "label": "Color",
            "default": "btn--primary",
            "options": [
              {"value": "btn--primary", "label": "Primary"},
              {"value": "btn--secondary", "label": "Secondary"},
              {"value": "btn--white", "label": "White"},
              {"value": "btn--black", "label": "Black"}
            ]
          },
          {
            "type": "select",
            "id": "button_size",
            "label": "Size",
            "default": "",
            "options": [
              { "label": "Small", "value": "btn--small" },
              { "label": "Medium", "value": "" },
              { "label": "Large", "value": "btn--large" }
            ]
          },
          {
            "type": "select",
            "id": "button_style",
            "label": "Style",
            "default": "btn--outline",
            "options": [
              { "label": "Solid", "value": "btn--solid" },
              { "label": "Outline", "value": "btn--outline" },
              { "label": "Text", "value": "btn--text" }
            ]
          },
          {
            "type": "checkbox",
            "id": "show_arrow",
            "label": "Show button arrow",
            "default": false
          },
          {
            "type": "color",
            "id": "featured_color_text",
            "label": "Text",
            "default": "#fff"
          },
          {
            "type": "color",
            "id": "featured_color_overlay",
            "label": "Overlay",
            "default": "#222222"
          },
          {
            "type": "range",
            "id": "featured_overlay_opacity",
            "label": "Overlay opacity",
            "step": 5,
            "max": 100,
            "min": 0,
            "unit": "%",
            "default": 10
          }
        ]
      }
    ]
  }
{% endschema %}
