{% comment %}
  pass in :

  * prod (product but avoiding collision with globally scoped product)
  * option_name - option to display as swatch (https://fluorescent.slack.com/archives/C02TP2RQXT2/p1652135541914079?thread_ts=1652135120.919689&cid=C02TP2RQXT2)
  * max_shown (optional)
  * show_sibling_swatches {{ Boolean }} - if there are no regular swatches and there are sibling swatches with the feature enabled, it will pass through as true
{% endcomment %}

{%- liquid
  assign file_extension = 'png'
  assign swatch_options = settings.swatch_options | downcase | split: ', '
  assign max_items = 5
  assign option_name = option_name | downcase | strip_newlines

  # custom swatch colors
  assign custom_colors = settings.custom_swatch_colors | newline_to_br | split: '<br />'
  assign custom_color_map_key = ''
  assign custom_color_map_value = ''

  for color_value in custom_colors
    assign custom_color_key = color_value | split: ':' | first | strip
    assign custom_color_value = color_value | split: ':' | last | strip

    assign custom_color_map_key = custom_color_map_key | append: ',' | append: custom_color_key
    assign custom_color_map_value = custom_color_map_value | append: ',' | append: custom_color_value
  endfor

  assign custom_color_map_key = custom_color_map_key | remove_first: ',' | split: ','
  assign custom_color_map_value = custom_color_map_value | remove_first: ',' | split: ','

  assign siblings_collection = prod.metafields.stiletto.sibling_collection.value.products | default: prod.metafields.stiletto.siblings_collection.value.products
  assign siblings_swatch_count = prod.metafields.stiletto.siblings_collection.value.products.size
-%}

{% comment %} Regular swatches {% endcomment %}
{% if prod.has_only_default_variant == false and show_sibling_swatches == false %}
  <div class="product-swatches-options">
    {%- for product_option in prod.options_with_values -%}
      {% assign product_option_name = product_option.name | downcase %}

      {% if product_option_name == option_name %}
        {%- liquid
          assign overflows = false

          if product_option.values.size > max_items
            assign overflows = true
            assign overflow_amount = product_option.values.size | minus: max_items
          endif
        -%}

        <ul class="product-swatches-options__list{% if swatch_options contains product_option_name %} product-item-options__list--swatch{% endif %} ff-body fs-body-50">
          {%- for value in product_option.values -%}
            {%- assign custom_swatch_image = value | handle | append: '.' | append: file_extension -%}
            {% if forloop.index <= max_items %}
              <li
                class="product-swatches-options__item product-swatches-options__item--swatch"
                data-swatch-shape="{{ settings.swatch_shape }}"
                style="
                  {% if custom_color_map_key contains value %}
                    {% for color_name in custom_color_map_key %}
                      {% if color_name == value %}
                        background-color: {{ custom_color_map_value[forloop.index0] }};
                        {% break %}
                      {% endif %}
                    {% endfor %}
                  {% else %}
                    background-color: {{ value | downcase | replace: ' ', '' }};
                  {% endif %}
                "
              >
                {% if images[custom_swatch_image] != blank %}
                  <img src="{{ custom_swatch_image | file_url }}" loading="lazy">
                {% endif %}
              </li>
            {% endif %}
          {%- endfor -%}
          {% if overflows %}
            <li class="product-swatches-options__item-overflow-note fs-body-25">
              {{ 'products.product.swatch_overflow' | t: overflow_amount: overflow_amount }}
            </li>
          {% endif %}
        </ul>
      {% endif %}
    {%- endfor -%}
  </div>
{% else %}
  {% comment %} Sibling swatches {% endcomment %}
  <div class="product-swatches-options sibling-swatches">
    {%- liquid
      assign overflows = false

      if siblings_swatch_count > max_items
        assign overflows = true
        assign overflow_amount = siblings_swatch_count | minus: max_items
      endif
    -%}

    <ul class="product-swatches-options__list product-item-options__list--swatch ff-body fs-body-50">
      {%- for sibling_product in siblings_collection -%}
        {%- assign custom_swatch_image = sibling_product.metafields.stiletto.sibling_option_name
          | handle
          | append: '.'
          | append: file_extension
        -%}
        {% if forloop.index <= max_items %}
          <li
            class="product-swatches-options__item product-swatches-options__item--swatch"
            data-swatch-shape="{{ settings.swatch_shape }}"
            style="
              {% if settings.product_listing_show_siblings_product_image == 'image' %}
                background-image: url({{ sibling_product.featured_media | image_url: width: image_width }});
              {% else %}
                {% if custom_color_map_key contains sibling_product.metafields.stiletto.sibling_option_name %}
                  {% for color_name in custom_color_map_key %}
                    {% if color_name == sibling_product.metafields.stiletto.sibling_option_name %}
                      background-color: {{ custom_color_map_value[forloop.index0] }};
                      {% break %}
                    {% endif %}
                  {% endfor %}
                {% else %}
                  background-color: {{ sibling_product.metafields.stiletto.sibling_option_name | downcase | replace: ' ', '' }};
                {% endif %}
              {% endif %}

              {% if images[custom_swatch_image] != blank %}
                background-image: url({{ custom_swatch_image | file_url }});
              {% endif %}
            "
          ></li>
        {% endif %}
        {% if overflows %}
          <li class="product-swatches-options__item-overflow-note fs-body-25">
            {{ 'products.product.swatch_overflow' | t: overflow_amount: overflow_amount }}
          </li>
        {% endif %}
      {%- endfor -%}
    </ul>
  </div>
{% endif %}
